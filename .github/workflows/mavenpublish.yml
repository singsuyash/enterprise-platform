# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java#apache-maven-with-a-settings-path

name: Build & Push Artefacts

on:
  push:
    branches: [ master ]
    tags:
      - v*
  pull_request:
    branches: [ master ]

jobs:
  maven-build:
    runs-on: ubuntu-latest
    steps:
    - name: git checkout
      uses: actions/checkout@v2
    
    - name: set up jdk 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        settings-path: ${{ github.workspace }} # location for the settings.xml file

    - name: set maven artefact version
      run: mvn versions:set -DnewVersion=1.0.$GITHUB_RUN_NUMBER
    
    - name: maven build
      run: mvn clean package --file pom.xml
      
    - name: push maven artefacts to github packages
      run: mvn deploy -s $GITHUB_WORKSPACE/settings.xml
      env:
        GITHUB_TOKEN: ${{ github.token }}
    
    - name: docker build spring-cloud-config-client
      env:
        module: spring-cloud-config-client
      run: docker build $module --file $module/Dockerfile --tag $module

    - name: docker build spring-cloud-config-server
      env:
        module: spring-cloud-config-server
      run: docker build $module --file $module/Dockerfile --tag $module

    - name: docker login to github packages
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin
    
    - name: docker push spring-cloud-config-client to github packages
      env:
        module: spring-cloud-config-client
      run: |
        IMAGE_ID=docker.pkg.github.com/${{ github.repository }}/$module
        
        # Change all uppercase to lowercase
        IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

        # Strip git ref prefix from version
        VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

        # Strip "v" prefix from tag name
        [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

        # Use Docker `latest` tag convention
        [ "$VERSION" == "master" ] && VERSION=latest

        echo IMAGE_ID=$IMAGE_ID
        echo VERSION=$VERSION

        docker tag $module $IMAGE_ID:$VERSION
        docker push $IMAGE_ID:$VERSION
        docker tag $module $IMAGE_ID:1.0.$GITHUB_RUN_NUMBER
        docker push $IMAGE_ID:1.0.$GITHUB_RUN_NUMBER

    - name: docker push spring-cloud-config-server to github packages
      env:
        module: spring-cloud-config-client
      run: |
        IMAGE_ID=docker.pkg.github.com/${{ github.repository }}/$module
        
        # Change all uppercase to lowercase
        IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

        # Strip git ref prefix from version
        VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

        # Strip "v" prefix from tag name
        [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

        # Use Docker `latest` tag convention
        [ "$VERSION" == "master" ] && VERSION=latest

        echo IMAGE_ID=$IMAGE_ID
        echo VERSION=$VERSION

        docker tag $module $IMAGE_ID:$VERSION
        docker push $IMAGE_ID:$VERSION
        docker tag $module $IMAGE_ID:1.0.$GITHUB_RUN_NUMBER
        docker push $IMAGE_ID:1.0.$GITHUB_RUN_NUMBER