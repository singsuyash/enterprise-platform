# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java#apache-maven-with-a-settings-path

name: Build & Push Artefacts

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  version: 1.0.$GITHUB_RUN_NUMBER

jobs:
  mvn-and-docker-build-push:
    runs-on: ubuntu-latest
    steps:
      
    - name: git checkout
      uses: actions/checkout@v2
    
    - name: set up jdk 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        settings-path: ${{ github.workspace }} # location for the settings.xml file

    - name: set maven artefact version
      run: mvn versions:set -DnewVersion=${{ env.version }}
    
    - name: maven build
      run: mvn clean package --file pom.xml
      
    - name: push maven artefacts to github packages
      run: mvn deploy -s $GITHUB_WORKSPACE/settings.xml
      env:
        GITHUB_TOKEN: ${{ github.token }}
    
    - name: docker build spring-cloud-config-client
      env:
        module: spring-cloud-config-client
      run: docker build $module --file $module/Dockerfile --tag $module

    - name: docker build spring-cloud-config-server
      env:
        module: spring-cloud-config-server
      run: docker build $module --file $module/Dockerfile --tag $module

    - name: docker login to github packages
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin
    
    - name: docker push spring-cloud-config-client to github packages
      env:
        module: spring-cloud-config-client
      run: |
        IMAGE_ID=docker.pkg.github.com/${{ github.repository }}/$module
        
        # Change all uppercase to lowercase
        IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

        docker tag $module $IMAGE_ID:${{ env.version }}
        docker push $IMAGE_ID:${{ env.version }}

    - name: docker push spring-cloud-config-server to github packages
      env:
        module: spring-cloud-config-client
      run: |
        IMAGE_ID=docker.pkg.github.com/${{ github.repository }}/$module
        
        # Change all uppercase to lowercase
        IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

        docker tag $module $IMAGE_ID:${{ env.version }}
        docker push $IMAGE_ID:${{ env.version }}